{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\Desktop\\\\Code\\\\AndreiNeagoieZTM\\\\API's\\\\starwars-api-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox'; // import { people } from './people';\n\nimport Scroll from './Scroll';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      people: [],\n      // basic state is an empty array\n      searchfield: '' // basic state is empty\n\n    };\n  }\n\n  componentDidMount() {\n    const urls = ['https://swapi.co/api/people/', 'https://swapi.co/api/people/?page=2', 'https://swapi.co/api/people/?page=3', 'https://swapi.co/api/people/?page=4', 'https://swapi.co/api/people/?page=5', 'https://swapi.co/api/people/?page=6', 'https://swapi.co/api/people/?page=7', 'https://swapi.co/api/people/?page=8', 'https://swapi.co/api/people/?page=9'];\n\n    const getData = async () => {\n      try {\n        const [page1, page2, page3, page4, page5, page6, page7, page8, page9] = await Promise.all(urls.map(async function (url) {\n          const response = await fetch(url);\n          const json = await response.json();\n          return json;\n        })); // const peopleResults = Object.assign(page1.results, page2.results, page3.results);  // This didn't work because page3 would overide the previous pages because they had the same keys as previous pages\n        // const peopleResults = page1.results.concat(page2.results, page3.results) // HELLLLLL YEAH! Got it working!! In order to get all them working I needed to concatenate all of the arrays together that are accessed through the page.results\n\n        const peopleResults = [...page1.results, ...page2.results, ...page3.results, ...page4.results, ...page5.results, ...page6.results, ...page7.results, ...page8.results, ...page9.results]; // updated to spread syntax to be more up-to-date\n\n        this.setState({\n          people: peopleResults\n        }); // Had to remove the \"set state to outside the second async function\"\n\n        console.log('page1', page1.results);\n        console.log('page2', page2.results);\n        console.log('page3', page3.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getData(); // fetch('https://swapi.co/api/people')\n    //     .then(response => response.json())\n    //     .then((data) => {\n    //         this.setState({ people: data.results })\n    //     })\n  }\n\n  render() {\n    const filteredPeople = this.state.people.filter(person => {\n      return person.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n\n    if (this.state.people.length === 0) {\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Loading.... \");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"f1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Star Wars Api Project\"), React.createElement(SearchBox, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Scroll, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(CardList, {\n        people: filteredPeople,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Adam/Desktop/Code/AndreiNeagoieZTM/API's/starwars-api-app/src/App.js"],"names":["React","Component","CardList","SearchBox","Scroll","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","people","componentDidMount","urls","getData","page1","page2","page3","page4","page5","page6","page7","page8","page9","Promise","all","map","url","response","fetch","json","peopleResults","results","console","log","error","render","filteredPeople","filter","person","name","toLowerCase","includes","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\n// import { people } from './people';\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            people: [], // basic state is an empty array\r\n            searchfield: '' // basic state is empty\r\n        }\r\n    }\r\n\r\n    componentDidMount() {       \r\n        \r\n        const urls = [\r\n            'https://swapi.co/api/people/',\r\n            'https://swapi.co/api/people/?page=2',\r\n            'https://swapi.co/api/people/?page=3',\r\n            'https://swapi.co/api/people/?page=4',\r\n            'https://swapi.co/api/people/?page=5',\r\n            'https://swapi.co/api/people/?page=6',\r\n            'https://swapi.co/api/people/?page=7',\r\n            'https://swapi.co/api/people/?page=8',\r\n            'https://swapi.co/api/people/?page=9'\r\n            \r\n\r\n          ]\r\n\r\n          const getData = async () => {\r\n              try {\r\n                const [ page1, page2, page3, page4, page5, page6, page7, page8, page9 ] = await Promise.all(urls.map(async function(url) {\r\n                    const response = await fetch(url);\r\n                    const json = await response.json();\r\n                    return json\r\n                }));\r\n                // const peopleResults = Object.assign(page1.results, page2.results, page3.results);  // This didn't work because page3 would overide the previous pages because they had the same keys as previous pages\r\n                // const peopleResults = page1.results.concat(page2.results, page3.results) // HELLLLLL YEAH! Got it working!! In order to get all them working I needed to concatenate all of the arrays together that are accessed through the page.results\r\n                const peopleResults = [...page1.results, ...page2.results, ...page3.results, ...page4.results, ...page5.results, ...page6.results, ...page7.results, ...page8.results, ...page9.results,]    // updated to spread syntax to be more up-to-date\r\n                this.setState({ people: peopleResults}); // Had to remove the \"set state to outside the second async function\"\r\n                console.log('page1', page1.results);\r\n                console.log('page2', page2.results);\r\n                console.log('page3', page3.results);\r\n              } catch (error) {\r\n                  console.log(error);\r\n              }\r\n            }\r\n\r\n            getData()\r\n          \r\n\r\n\r\n\r\n        // fetch('https://swapi.co/api/people')\r\n        //     .then(response => response.json())\r\n        //     .then((data) => {\r\n        //         this.setState({ people: data.results })\r\n        //     })\r\n    }\r\n    \r\n\r\n\r\n    \r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    \r\n    }\r\n\r\n    render() {\r\n        const filteredPeople = this.state.people.filter(person => {\r\n            return person.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if (this.state.people.length === 0) {\r\n            return <h1> Loading.... </h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Star Wars Api Project</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <CardList people={filteredPeople} />\r\n                    </Scroll>\r\n                     \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}